/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;

public class FileBuffer : IDisposable, BufferWritable {
  private IntPtr swigCPtr;
  protected bool swigCMemOwn;

  internal FileBuffer(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  internal static IntPtr getCPtr(FileBuffer obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  protected FileBuffer() : this(IntPtr.Zero, false) {
  }

  ~FileBuffer() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      FuseWrapperPINVOKE.delete_FileBuffer(swigCPtr);
    }
    swigCPtr = IntPtr.Zero;
    GC.SuppressFinalize(this);
  }

  public FWBuffer buf {
    get {
      IntPtr cPtr = FuseWrapperPINVOKE.get_FileBuffer_buf(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new FWBuffer(cPtr, false);
    } 
  }

  public int error {
    get {
      return FuseWrapperPINVOKE.get_FileBuffer_error(swigCPtr);
    } 
  }

  public FileBuffer(FWBuffer buffer) : this(FuseWrapperPINVOKE.new_FileBuffer(FWBuffer.getCPtr(buffer)), true) {
  }

  public int addFile(string name, ulong nodeId, uint type, ulong off) {
    return FuseWrapperPINVOKE.FileBuffer_addFile(swigCPtr, name, nodeId, type, off);
  }

  public int copyTo(FWBuffer outBuf) {
    return FuseWrapperPINVOKE.FileBuffer_copyTo(swigCPtr, FWBuffer.getCPtr(outBuf));
  }

}
